name: Build and Deploy AWS Batch

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  AWS_REGION: eu-central-1
  PROJECT_NAME: appalti-batch

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Configure AWS credentials
      uses: aws-actions/configure-aws-credentials@v4
      with:
        aws-access-key-id: ${{ secrets.AWS_ACCESS_KEY_ID }}
        aws-secret-access-key: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
        aws-region: ${{ env.AWS_REGION }}

    - name: Login to Amazon ECR
      id: login-ecr
      uses: aws-actions/amazon-ecr-login@v2

    - name: Get ECR repository URI
      id: ecr-uri
      run: |
        ACCOUNT_ID=$(aws sts get-caller-identity --query Account --output text)
        ECR_URI="${ACCOUNT_ID}.dkr.ecr.${{ env.AWS_REGION }}.amazonaws.com/${{ env.PROJECT_NAME }}-jobs"
        echo "ecr_uri=${ECR_URI}" >> $GITHUB_OUTPUT

    - name: Build Docker image
      run: |
        docker build -t ${{ env.PROJECT_NAME }}-jobs -f docker/Dockerfile .

    - name: Tag Docker image
      run: |
        docker tag ${{ env.PROJECT_NAME }}-jobs:latest ${{ steps.ecr-uri.outputs.ecr_uri }}:latest
        docker tag ${{ env.PROJECT_NAME }}-jobs:latest ${{ steps.ecr-uri.outputs.ecr_uri }}:${{ github.sha }}

    - name: Push Docker image to ECR
      run: |
        docker push ${{ steps.ecr-uri.outputs.ecr_uri }}:latest
        docker push ${{ steps.ecr-uri.outputs.ecr_uri }}:${{ github.sha }}

    # Job definitions are already configured in AWS Batch
    # They will automatically use the latest image from ECR

    - name: Deployment summary
      run: |
        echo "üéâ Deployment completed!"
        echo "üì¶ Image: ${{ steps.ecr-uri.outputs.ecr_uri }}:${{ github.sha }}"
        echo "üîç Check logs: aws logs tail /aws/batch/${{ env.PROJECT_NAME }} --follow"